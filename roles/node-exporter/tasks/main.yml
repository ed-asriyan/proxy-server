- name: Ensure required variables are defined
  assert:
    that:
      - node_exporter_port is number

- name: Create user
  user: name={{ node_exporter_user }}

- name: Get MD5 checksum of node-exporter executable
  stat:
    path: "/home/{{ node_exporter_user }}/{{ node_exporter_executable_name }}"
    checksum_algorithm: md5
  register: file_stat

- name: Detect arch
  command: uname -m
  check_mode: no
  register: arch

- name: Know if the directory exists
  stat:
    path: "/home/{{ node_exporter_user }}/{{ node_exporter_downloads[arch.stdout].directory }}"
  register: file_stat

- name: Download & extract node-exporter
  when: "file_stat.stat.exists == false"
  unarchive:
    src: "{{  node_exporter_downloads[arch.stdout].url }}"
    dest: "/home/{{ node_exporter_user }}"
    remote_src: yes
  register: download

- name: Set node-exporter ownership, group and permissions
  file:
    path: "/home/{{ node_exporter_user }}/{{ node_exporter_downloads[arch.stdout].directory }}/{{ node_exporter_executable_name }}"
    group: "{{ node_exporter_user }}"
    owner: "{{ node_exporter_user }}"
    mode: "700"

- name: Remove unexpected files in home
  include_tasks: tasks/remove-unexpected-files.yml
  vars:
    directory: "/home/{{ node_exporter_user }}"
    files:
      - "{{ node_exporter_downloads[arch.stdout].directory }}"

- name: Render systemd service config
  template:
    src: node_exporter.service.j2
    dest: /etc/systemd/system/node_exporter.service
  register: systemd

- name: Reload daemon
  systemd:
    daemon_reload: yes
  when: systemd.changed

- name: Restart systemd app service
  systemd:
    name: node_exporter.service
    state: restarted
    enabled: yes
  when: systemd.changed or download.changed
