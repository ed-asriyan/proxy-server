load_module /usr/lib/nginx/modules/ngx_stream_module.so;
daemon off;
worker_processes auto;

# https://www.cyberciti.biz/faq/linux-unix-nginx-too-many-open-files
worker_rlimit_nofile {{ shadowsocks_gateway_worker_rlimit_nofile }};
pid {{ shadowsocks_gateway_pid_path }};

events {
    worker_connections {{ shadowsocks_gateway_worker_connections }};
}

http {
    server {
        access_log {{ shadowsocks_gateway_http_access_log_path }};
        error_log {{ shadowsocks_gateway_http_error_log_path }};

        listen *:80;
        listen [::]:80;
        server_name _;
        return 301 https://{{ shadowsocks_gateway_fallback_proxy_target }};
    }

{% if 'prometheus_metrics' in server %}
    server {
        access_log {{ shadowsocks_gateway_prometheus_access_log_path }};
        error_log {{ shadowsocks_gateway_prometheus_error_log_path }};

        listen *:{{ server.prometheus_metrics.port }} ssl http2;
        listen [::]:{{ server.prometheus_metrics.port }} ssl http2;

        ssl_certificate {{ shadowsocks_gateway_certificate_path }};
        ssl_certificate_key {{ shadowsocks_gateway_key_path }};
        ssl_protocols TLSv1.2 TLSv1.3;

        location {{ server.prometheus_metrics.shadowsocks.url_path }} {
            proxy_pass http://localhost:{{ shadowsocks_metrics_port }}/metrics;
        }

        location {{ server.prometheus_metrics.node_exporter.url_path }} {
            proxy_pass http://localhost:{{ node_exporter_port }}/metrics;
        }

        location / {
            return 444;
        }

        error_page 404 = @redirect;

        location @redirect {
            return 444;
        }
    }
{% endif %}
}

stream {
    log_format basic '{'
        '"time":"$time_iso8601"'
        ',"remote_addr":"$remote_addr"'
        ',"protocol":"$protocol"'
        ',"status":"$status"'
        ',"bytes_sent":"$bytes_sent"'
        ',"bytes_received":"$bytes_received"'
        ',"session_time":"$session_time"'
        ',"upstream_addr":"$upstream_addr"'
        ',"upstream_bytes_sent":"$upstream_bytes_sent"'
        ',"upstream_bytes_received":"$upstream_bytes_received"'
        ',"upstream_connect_time":"$upstream_connect_time"'
    '}';

    map $ssl_preread_protocol $backend {
        default shadowsocks_backend;
        "TLSv1.0" https_backend;
        "TLSv1.2" https_backend;
        "TLSv1.3" https_backend;
    }

    map $ssl_preread_protocol $access_log_file {
        default ../../../dev/null;
        "TLSv1.0" ../../..{{ shadowsocks_gateway_tls_access_log_path }};
        "TLSv1.2" ../../..{{ shadowsocks_gateway_tls_access_log_path }};
        "TLSv1.3" ../../..{{ shadowsocks_gateway_tls_access_log_path }};
    }

    upstream https_backend {
        server {{ shadowsocks_gateway_fallback_proxy_target }};
    }

    upstream shadowsocks_backend {
        server localhost:{{ shadowsocks_port }};
    }

    server {
        listen *:{{ server.port }};
        proxy_timeout 5s;
        ssl_preread on;

        access_log $access_log_file basic;
        error_log ../../..{{ shadowsocks_gateway_tcp_error_log_path }};
        proxy_pass $backend;
    }

    server {
        listen *:{{ server.port }} udp;

        access_log off;
        error_log ../../..{{ shadowsocks_gateway_udp_error_log_path }};
        proxy_pass shadowsocks_backend;
    }
}
